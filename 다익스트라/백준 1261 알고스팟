//백준 1261 알고스팟

#include<iostream>
#include<vector>
#include<queue>
#include<stdio.h>
using namespace std;

#define MAX 987654321
int n, m;
vector<vector<int> > map;
vector<vector<int> > kmap;

int dx[4] = { 0,0,-1,1 }, dy[4] = { 1,-1,0,0 };
class info {
public:
	int x, y, k;
};
void get() {
	cin >> n >> m;
	map.assign(m, vector<int>(n, 0));
	kmap.assign(m, vector<int>(n, MAX));
	for (int i = 0;i < m;i++) {
		for (int j = 0;j < n;j++) {
			scanf("%1d", &map[i][j]);
		}
	}
}

void fun() {
	info a;
	a.x = 0;
	a.y = 0;
	a.k = 0;
	queue<info> q;
	q.push(a);
	kmap[a.x][a.y] = 0;
	while (!q.empty()) {
		int x = q.front().x;
		int y = q.front().y;
		int k = q.front().k;
		q.pop();
		
		for (int i = 0;i < 4;i++) {
			int nx = x + dx[i],ny =  y + dy[i];
			int nk = k;
			if (nx < 0 || ny < 0 || nx >= m || ny >= n)continue;
			
			if (map[nx][ny] == 1)nk++;
			if (kmap[nx][ny] <= nk)continue;
			
			kmap[nx][ny] = nk;
			info b;
			b.x = nx;
			b.y = ny;
			b.k = nk;
			q.push(b);
			
		}


	}
}

int main() {
	get();
	fun();
	cout << kmap[m - 1][n - 1];
}
