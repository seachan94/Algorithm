#include<iostream>
#include<vector>
#include<queue>
using namespace std;

int n, m, k;
int count = 0;
int dx[8] = { -1,-1,0,1,1,1,0,-1 };
int dy[8] = { 0,1,1,1,0,-1,-1,-1 };
class f {
public:
	int x;
	int y;
	int d;//방향
	int v;//속도
	int w;//질량
};
class ff {
public:
	int w;
	int v;
	vector<int> d;
};
vector<vector<ff> > map;
queue<f> fs;
void get() {
	cin >> n >> m >> k;
	f a;
	ff b;
	b.w = 0;
	b.d.assign(0,0);
	b.v = 0;
	map.assign(n + 1, vector<ff>(n + 1, b));
	for (int i = 0;i < m;i++) {
		cin >> a.x >> a.y >> a.w >> a.v >> a.d;
		
		fs.push(a);
	}
}
void init() {
	for (int i = 1;i <= n;i++) {
		for (int j = 1;j <= n;j++) {
			map[i][j].d.assign(0, 0);
			map[i][j].w = 0;
			map[i][j].v = 0;
		}
	}
}
void check() {
	for (int i = 1;i <= n;i++) {
		for (int j = 1;j <= n;j++) {
			if (map[i][j].d.size() < 1) {
				continue;
			}
			else if (map[i][j].d.size() == 1) {
	
				f a;
				a.x = i;
				a.y = j;
				a.d = map[i][j].d[0];
				a.v = map[i][j].v;
				a.w = map[i][j].w;

				fs.push(a);
			}
			else if (map[i][j].d.size() > 1) {

				f a;
				bool flag = false;
				bool cflag = false;
				if (map[i][j].d[0] % 2 == 1)flag = true;
				for (int k = 1;k < map[i][j].d.size();k++) {
					if (map[i][j].d[k] % 2 == 0 && flag) {
						cflag = true;
						break;
					}
					else if(map[i][j].d[k]%2 == 1 &&!flag){
						cflag = true;
						break;
					}
				}

				for (int k = 0;k < 4;k++) {
					f a;
					a.x = i;
					a.y = j;
					a.w = map[i][j].w / 5;
					a.v = map[i][j].v / map[i][j].d.size();
					if (!cflag)a.d = k*2;
					else a.d = k*2 + 1;
					
				
					if(a.w>0)fs.push(a);
					
				}
			}

		}
	}
	
}
void movefire() {
	init();
	while (!fs.empty()) {
		int x = fs.front().x;
		int y = fs.front().y;
		int w = fs.front().w;
		int d = fs.front().d;
		int v = fs.front().v;
		fs.pop();
		//xy정하고
		int nx = x + (v * dx[d])%n;
		int ny = y +( v * dy[d])%n;
		if (nx > n) nx = nx % n;
		else if (nx < 1) nx = n - (abs(nx) % n);
		
		if (ny > n) ny = ny % n;
		else if (ny < 1)ny = n - (abs(ny) % n);

		
		//v더해줌

		map[nx][ny].v += v;
		//w 더해줌
		map[nx][ny].w += w;
		//d나열
		
		map[nx][ny].d.push_back(d);
	}
	check();
	
}


int main() {
	get();

	for (int i = 0;i < k;i++) {
		movefire();
	}
	int result = 0;
	while (!fs.empty()) {
		result += fs.front().w;

		fs.pop();
	}
	cout << result;

}

//구현력이 많이 약해지는 느낌이 많이 든다...
//파이어볼 움직일때 x와 y 축 잡는거 좀 외워야  
